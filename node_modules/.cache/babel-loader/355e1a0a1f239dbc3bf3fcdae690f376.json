{"ast":null,"code":"const SET_FILES = \"SET_FILES\";\nconst SET_CURRENT_DIR = \"SET_CURRENT_DIR\";\nconst ADD_FILE = \"ADD_FILE\";\nconst SET_POPUP_DISPLAY = \"SET_POPUP_DISPLAY\";\nconst PUSH_TO_STACK = \"PUSH_TO_STACK\";\nconst DELETE_FILE = 'DELETE_FILE';\nconst SET_VIEW = 'SET_VIEW';\nconst defaultState = {\n  files: [],\n  currentDir: null,\n  popupDisplay: 'none',\n  dirStack: [],\n  view: 'list'\n};\nexport default function fileReducer(state = defaultState, action) {\n  switch (action.type) {\n    case SET_FILES:\n      return { ...state,\n        files: action.payload\n      };\n\n    case SET_CURRENT_DIR:\n      return { ...state,\n        currentDir: action.payload\n      };\n\n    case ADD_FILE:\n      return { ...state,\n        files: [...state.files, action.payload]\n      };\n\n    case SET_POPUP_DISPLAY:\n      return { ...state,\n        popupDisplay: action.payload\n      };\n\n    case PUSH_TO_STACK:\n      return { ...state,\n        dirStack: [...state.dirStack, action.payload]\n      };\n\n    case DELETE_FILE:\n      return { ...state,\n        files: [...state.files.filter(file => file._id != action.payload)]\n      };\n\n    case SET_VIEW:\n      return { ...state,\n        view: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\nexport const setFiles = files => ({\n  type: SET_FILES,\n  payload: files\n});\nexport const setCurrentDir = dir => ({\n  type: SET_CURRENT_DIR,\n  payload: dir\n});\nexport const addFile = file => ({\n  type: ADD_FILE,\n  payload: file\n});\nexport const setPopupDisplay = display => ({\n  type: SET_POPUP_DISPLAY,\n  payload: display\n});\nexport const pushToStack = dir => ({\n  type: PUSH_TO_STACK,\n  payload: dir\n});\nexport const deleteFileAction = dirId => ({\n  type: DELETE_FILE,\n  payload: dirId\n});\nexport const setFileView = payload => ({\n  type: SET_VIEW,\n  payload\n});","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/react-registration-autorization/MERN-cloud-disk/client/src/reducers/fileReducer.js"],"names":["SET_FILES","SET_CURRENT_DIR","ADD_FILE","SET_POPUP_DISPLAY","PUSH_TO_STACK","DELETE_FILE","SET_VIEW","defaultState","files","currentDir","popupDisplay","dirStack","view","fileReducer","state","action","type","payload","filter","file","_id","setFiles","setCurrentDir","dir","addFile","setPopupDisplay","display","pushToStack","deleteFileAction","dirId","setFileView"],"mappings":"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","sourcesContent":["const SET_FILES = \"SET_FILES\"\r\nconst SET_CURRENT_DIR = \"SET_CURRENT_DIR\"\r\nconst ADD_FILE = \"ADD_FILE\"\r\nconst SET_POPUP_DISPLAY = \"SET_POPUP_DISPLAY\"\r\nconst PUSH_TO_STACK = \"PUSH_TO_STACK\"\r\nconst DELETE_FILE = 'DELETE_FILE'\r\nconst SET_VIEW = 'SET_VIEW'\r\n\r\nconst defaultState = {\r\n    files: [],\r\n    currentDir: null,\r\n    popupDisplay: 'none',\r\n    dirStack: [],\r\n    view: 'list'\r\n}\r\n\r\nexport default function fileReducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case SET_FILES: return {...state, files: action.payload}\r\n        case SET_CURRENT_DIR: return {...state, currentDir: action.payload}\r\n        case ADD_FILE: return {...state, files: [...state.files, action.payload]}\r\n        case SET_POPUP_DISPLAY: return {...state, popupDisplay: action.payload}\r\n        case PUSH_TO_STACK: return {...state, dirStack: [...state.dirStack, action.payload]}\r\n        case DELETE_FILE: return {...state, files: [...state.files.filter(file => file._id != action.payload)]}\r\n        case SET_VIEW: return {...state, view: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setFiles = (files) => ({type: SET_FILES, payload: files})\r\nexport const setCurrentDir= (dir) => ({type: SET_CURRENT_DIR, payload: dir})\r\nexport const addFile = (file) => ({type: ADD_FILE, payload: file})\r\nexport const setPopupDisplay = (display) => ({type: SET_POPUP_DISPLAY, payload: display})\r\nexport const pushToStack = (dir) => ({type: PUSH_TO_STACK, payload: dir})\r\nexport const deleteFileAction = (dirId) => ({type: DELETE_FILE, payload: dirId})\r\nexport const setFileView = (payload) => ({type: SET_VIEW, payload})\r\n"]},"metadata":{},"sourceType":"module"}